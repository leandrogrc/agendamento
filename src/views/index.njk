<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Appointment Scheduler</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script defer src="../public/script.js"></script>
  </head>
  <body
    class="flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-500 to-purple-600"
  >
    <div class="bg-white p-10 rounded-3xl shadow-2xl w-full max-w-md">
      <h2 class="text-3xl font-extrabold text-center text-gray-800">
        ðŸ“… Book an Appointment
      </h2>

      <!-- Date Picker -->
      <label class="block mt-6 text-lg font-semibold text-gray-700">
        Select a Date:
      </label>
      <input
        type="date"
        id="appointmentDate"
        class="w-full p-3 border rounded-lg mt-2 text-gray-700 focus:ring focus:ring-blue-300"
      />

      <!-- Time Slots -->
      <h3 class="text-xl font-semibold text-gray-700 mt-5 mb-3">
        Available Time Slots:
      </h3>
      <div id="timeSlots" class="grid grid-cols-2 gap-4">
        {% for slot in timeSlots %}
        <button
          class="bg-blue-100 hover:bg-blue-200 text-blue-700 font-semibold py-2 px-4 rounded-lg"
          data-time="{{ slot }}"
        >
          {{ slot }}
        </button>
        {% else %}
        <p class="text-gray-500 col-span-2 text-center">
          No time slots available.
        </p>
        {% endfor %}
      </div>
      <!-- Booking Message -->
      {% if bookingMessage %}
      <div
        id="bookingMessage"
        class="mt-6 text-center font-semibold text-lg text-green-600"
      >
        {{ bookingMessage }}
      </div>
      {% else %}
      <div
        id="bookingMessage"
        class="mt-6 text-center font-semibold text-lg"
      ></div>
      {% endif %}
    </div>

    <!-- Modal -->
    <div
      id="nameModal"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden"
    >
      <div class="bg-white p-6 rounded-lg shadow-lg w-96 text-center">
        <h3 class="text-xl font-semibold text-gray-700">Enter Your Name</h3>
        <input
          type="text"
          id="clientName"
          class="w-full p-2 border rounded-lg mt-3 text-gray-700 focus:ring focus:ring-blue-300"
          placeholder="Your Name"
        />
        <div class="mt-4 flex justify-center space-x-4">
          <button
            id="confirmBooking"
            class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600"
          >
            Confirm
          </button>
          <button
            id="closeModal"
            class="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
    <script>
      const apiBaseUrl = "http://localhost:3000/appointments";
      let selectedDate = "";
      let selectedHour = "";

      // Abrir o modal corretamente
      function openBookingModal(hour) {
        selectedHour = hour;
        document.getElementById("nameModal").classList.remove("hidden");
      }

      // Fechar o modal corretamente
      function closeBookingModal() {
        document.getElementById("nameModal").classList.add("hidden");
      }

      // Eventos dos botÃµes do modal
      document
        .getElementById("closeModal")
        .addEventListener("click", closeBookingModal);
      document
        .getElementById("confirmBooking")
        .addEventListener("click", async function () {
          const clientName = document.getElementById("clientName").value.trim();
          if (!clientName) return;

          try {
            const response = await fetch(`${apiBaseUrl}/schedule`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                date: selectedDate,
                hour: selectedHour,
                clientName,
              }),
            });
            const data = await response.json();
            document.getElementById("bookingMessage").textContent =
              data.message;

            closeBookingModal();
            document
              .getElementById("appointmentDate")
              .dispatchEvent(new Event("change"));
          } catch (error) {
            console.error("Error booking appointment:", error);
            document.getElementById("bookingMessage").textContent =
              "Failed to book appointment.";
          }
        });

      // Adiciona evento nos botÃµes dos horÃ¡rios
      document
        .getElementById("appointmentDate")
        .addEventListener("change", async function () {
          selectedDate = this.value;
          const timeSlotsDiv = document.getElementById("timeSlots");
          timeSlotsDiv.innerHTML = "";

          try {
            const response = await fetch(`${apiBaseUrl}/${selectedDate}`);
            const slots = await response.json();

            slots.forEach((slot) => {
              const button = document.createElement("button");
              button.textContent = slot.hour.slice(0, 5);
              button.className = `p-3 rounded-lg text-white font-medium ${
                slot.available
                  ? "bg-green-500 hover:bg-green-600"
                  : "bg-gray-400 cursor-not-allowed"
              }`;
              button.disabled = !slot.available;

              if (slot.available) {
                button.addEventListener("click", () =>
                  openBookingModal(slot.hour)
                );
              }

              timeSlotsDiv.appendChild(button);
            });
          } catch (error) {
            console.error("Error fetching slots:", error);
            timeSlotsDiv.innerHTML =
              "<p class='text-red-500'>Failed to load slots.</p>";
          }
        });
    </script>
  </body>
</html>
